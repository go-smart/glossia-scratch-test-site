! /**
!  * This file is part of the Go-Smart Simulation Architecture (GSSA).
!  * Go-Smart is an EU-FP7 project, funded by the European Commission.
!  *
!  * Copyright (C) 2013-  NUMA Engineering Ltd. (see AUTHORS file)
!  *
!  * This program is free software: you can redistribute it and/or modify
!  * it under the terms of the GNU Affero General Public License as
!  * published by the Free Software Foundation, either version 3 of the
!  * License, or (at your option) any later version.
!  *
!  * This program is distributed in the hope that it will be useful,
!  * but WITHOUT ANY WARRANTY; without even the implied warranty of
!  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!  * GNU General Public License for more details.
!  *
!  * You should have received a copy of the GNU Affero General Public License
!  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
!  */
! 
!====================================================================
!        - Complete model with 3 solvers:
!                - Heat Solver
!                - Cells state Solver
!                - VTU output
!        - Transient simulation
!        - 1 materials (Blood and tissue)
!====================================================================

!====================================================================
Header
!====================================================================
!        Computational mesh directory (also used to save the vtu files):
!--------------------------------------------------------------------
        Mesh DB "." "$MESHLOCATION_MESHER"                                   ![H1]!
        Include Path ""
        Results Directory ""
!====================================================================
End
!====================================================================

!====================================================================
Simulation
!====================================================================
        ! Test name:
        !--------------------------------------------------------------------
        Test Name = String "$RUNNAME"                                        ![Si1]!
        !--------------------------------------------------------------------
        ! Simulation length (number of timesteps):
        !--------------------------------------------------------------------
        Timestep intervals = Integer $SETTING_FINAL_TIMESTEP                ![Si2]!
        !--------------------------------------------------------------------
        ! Problem characteristics:
        !--------------------------------------------------------------------
        Coordinate System = String "Cartesian 3D"
        Simulation Type = String "Transient"
        !--------------------------------------------------------------------
        ! Timestepping scheme:
        !--------------------------------------------------------------------
        Timestep Sizes = Real $SETTING_TIMESTEP_SIZE
        !--------------------------------------------------------------------
        ! Electric sources:
        !--------------------------------------------------------------------
        ! Sources coordinates (text files):
        !--------------------------------------------------------------------
        Electric Tips Filename Root = String "$RUNNAME-probe-locations"          ![Si5]!
        !--------------------------------------------------------------------
        ! Variable Sources coordinates in time:
        !--------------------------------------------------------------------
        !--------------------------------------------------------------------
        ! Electric power over time (text file):
        !--------------------------------------------------------------------
        Electric Power Filename = String "$RUNNAME-power-over-time"          ![Si5]!
        Multi Electric Tips Location = Logical True
        Electric Tips Location Times Nb = Integer $PROBELOCATIONS_COUNT
        Multi Electric Tips Location Times($PROBELOCATIONS_COUNT) = Real $PROBELOCATIONS

!====================================================================
End
!====================================================================

!====================================================================
Body 1
!====================================================================
  $REGIONS_TISSUE

  Name = "Tissue & Blood"
  Equation = Integer 1
  Body Force = Integer 1
  Initial condition = Integer 1
  Material = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Body 2
!====================================================================
  $REGIONS_TUMOURS

  Name = "Tumour"
  Equation = Integer 1
  Initial condition = Integer 1
  Material = Integer 2
  Body Force = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Equation 1
!====================================================================
  Name = "NUMA RFA Point Sources"
  Active Solvers(4) = Integer 1 2 3 4
!====================================================================
End
!====================================================================

!====================================================================
Solver 1 ! Heat solver (tissue temperatures)
!====================================================================
    Equation = String "heatequation"
    Procedure = File "libnuma-eheatsolver" "HeatSolver"

    Update Exported Variables = Logical True
    Nonlinear Update Exported Variables = Logical True
    Exported Variable 1 = String "Electric Power"
    Variable = String "Temperature"
    Variable DOFs = Integer 1

    Cell Death Modelling = Logical True
    Perfusion Visualization = Logical True
    Variable = String "Temperature"
    Variable DOFs = Integer 1
    Linear System Solver = "Iterative"
    Linear System Iterative Method = "BiCGStabL"
    Linear System Max Iterations = 350
    Linear System Convergence Tolerance = 1.0e-10
    Linear System Abort Not Converged = True
    !Linear System Preconditioning = "ILU0"
    Linear System Residual Output = 1
    Steady State Convergence Tolerance = 1.0e-03
    Stabilize = True
    Nonlinear System Convergence Tolerance = 1.0e+2
    Nonlinear System Max Iterations = 500
    Nonlinear System Newton After Iterations = 3
    Nonlinear System Newton After Tolerance = 1.0e-02
    Nonlinear System Relaxation Factor = 0.25
!====================================================================
End
!====================================================================

!====================================================================
Solver 2 ! Cells state
!====================================================================
    Equation = String "cellstate"
    Procedure = File "libnuma-cellstate" "NumaCellStateSolver"

    Variable = String "CellState[Alive :1 Dead:1]"
    Variable DOFs = Integer 2
    Forward Rate = Real $CONSTANT_FORWARD_RATE
    Backward Rate = Real $CONSTANT_BACKWARD_RATE
    Exponential Rate = Real $CONSTANT_EXPONENTIAL_RATE
    Nonlinear System Max Iterations = 500
    Nonlinear System Convergence Tolerance = 1.0e-9
!====================================================================
End
!====================================================================

!====================================================================
Solver 3
!====================================================================
    Equation = String "powergenerator"
    Exec Solver = String "Before timestep"
    Procedure = File "libnuma-powergenerator" "NumaPowerGeneratorSolver"
    Update Exported Variables = Logical True
    Present Phase = $PHASE
    Nonlinear Update Exported Variables = Logical True
    Variable = String "SAR"
    Impedance Voltage = Real 300.0
    Temperature Controlled Electric Power = Logical True
    Proportional Gain For Electric Power Control = Real $CONSTANT_PID_CONTROLLER_PROPORTIONAL_GAIN
    Target Temperature = $TARGET_TEMPERATURE
    Electric Power = $CONSTANT_INPUT_POWER
    Linear System Solver = "Iterative"
    Linear System Iterative Method = "BiCGStabL"
    !Linear System Use TrilinosKokkos = Logical True
    !TrilinosKokkos Parameter File = String belos_ifpack.xml
    Linear System Max Iterations = 350
    Linear System Convergence Tolerance = 1.0e-10
    Linear System Abort Not Converged = True
    !Linear System Preconditioning = "ILU0"
    Linear System Residual Output = 1
    Steady State Convergence Tolerance = 1.0e-03
End

!====================================================================
Solver 4 ! VTU Output writer
!====================================================================
        Equation = String "vtuoutput"
        Exec Solver = String "After timestep"
        Procedure = File "ResultOutputSolve" "ResultOutputSolver"
    Output Format = String "vtu"
    Vtu Format = Logical True
!--------------------------------------------------------------------
!        Frequency of output (in timesteps):
!--------------------------------------------------------------------
        Output Frequency = Integer 1                         ![So1]!
!====================================================================
End
!====================================================================

!====================================================================
Body Force 1
!====================================================================
    Heat Source = Equals SAR
    Volumetric Heat Source = Logical True
    Perfusion Rate = Real $CONSTANT_PERFUSION_RATE
    Perfusion Density = Real $CONSTANT_PERFUSION_DENSITY
    Perfusion Heat Capacity = Real $CONSTANT_PERFUSION_HEAT_CAPACITY
    Perfusion Reference Temperature = Real $CONSTANT_PERFUSION_REFERENCE_TEMPERATURE
!====================================================================
End
!====================================================================

!====================================================================
Material 1 ! Body
!====================================================================
  Name = "Tissue"

  Body Temperature = Real $CONSTANT_BODY_TEMPERATURE
  Heat Conductivity = Real $CONSTANT_THERMAL_CONDUCTIVITY_TISSUE
  Heat Capacity = Real $CONSTANT_SPECIFIC_HEAT_CAPACITY_TISSUE
  Density = Real $CONSTANT_DENSITY_TISSUE
  Vapourization Cut Off = Real $CONSTANT_VAPOURIZATION_CUT_OFF_TISSUE
  !Vapourization Minimum Deposition = Real $CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_TISSUE
  !Vapourization Gradient = Real $CONSTANT_VAPOURIZATION_GRADIENT_TISSUE
  !Coagulation Cut Off = Real $CONSTANT_COAGULATION_CUT_OFF_TISSUE
  !Coagulation Minimum Deposition = Real $CONSTANT_COAGULATION_MINIMUM_DEPOSITION_TISSUE
  !Coagulation Gradient = Real $CONSTANT_COAGULATION_GRADIENT_TISSUE
!====================================================================
End
!====================================================================

!====================================================================
Material 2 ! Tumour
!====================================================================
    Body Temperature = Real $CONSTANT_BODY_TEMPERATURE
    Heat Conductivity = Real $CONSTANT_THERMAL_CONDUCTIVITY_TUMOUR
    Heat Capacity = Real $CONSTANT_SPECIFIC_HEAT_CAPACITY_TUMOUR
    Density = Real $CONSTANT_DENSITY_TUMOUR

    Vapourization Cut Off = Real $CONSTANT_VAPOURIZATION_CUT_OFF_TUMOUR
    !Vapourization Minimum Deposition = Real $CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_TUMOUR
    !Vapourization Gradient = Real $CONSTANT_VAPOURIZATION_GRADIENT_TUMOUR
    !Coagulation Cut Off = Real $CONSTANT_COAGULATION_CUT_OFF_TUMOUR
    !Coagulation Minimum Deposition = Real $CONSTANT_COAGULATION_MINIMUM_DEPOSITION_TUMOUR
    !Coagulation Gradient = Real $CONSTANT_COAGULATION_GRADIENT_TUMOUR
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 1 !Organ wall + sphere
!====================================================================
  $REGIONS_BOUNDARY
  Temperature = Real $CONSTANT_BODY_TEMPERATURE
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 2 ! Output vessel (Hepatic vein)
!====================================================================

        !--------------------------------------------------------------------
        ! Boundary index(es):
        !--------------------------------------------------------------------
        $REGIONS_VEINS
        !--------------------------------------------------------------------
        ! Convective BC on temperature:
        !--------------------------------------------------------------------
        Heat Flux BC = Logical True
        !--------------------------------------------------------------------
        ! Convective transfer coefficient (kg.s^-3.K^-1):
        !--------------------------------------------------------------------
        Heat Transfer Coefficient = Real $CONSTANT_VENOUS_HEAT_TRANSFER_COEFFICIENT
        !--------------------------------------------------------------------
        ! External temperature (K):
        !--------------------------------------------------------------------
        External Temperature = Real $CONSTANT_BODY_TEMPERATURE

!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 3 ! Input vessel (Portal vein + HA)
!====================================================================

        !--------------------------------------------------------------------
        ! Boundary index(es):
        !--------------------------------------------------------------------
        $REGIONS_ARTERIES
        !--------------------------------------------------------------------
        ! Dirichlet BC on blood and tissue temperatures (K):
        !--------------------------------------------------------------------
        Temperature = Real $CONSTANT_BODY_TEMPERATURE
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 4
!====================================================================
    $REGIONS_BRONCHI
    Flow Pressure = Real -0.00000000
    Heat Flux BC = Logical True
    Heat Transfer Coefficient = Real $CONSTANT_BRONCHI_HEAT_TRANSFER_COEFFICIENT
    External Temperature = Real $CONSTANT_BODY_TEMPERATURE
!====================================================================
End
!====================================================================

!====================================================================
Initial Condition 1
!====================================================================

    Temperature = Real $CONSTANT_BODY_TEMPERATURE

    CellState(2) = Real $CONSTANT_INITIAL_CELLS_ALIVE $CONSTANT_INITIAL_CELLS_DEAD
!====================================================================
End
!====================================================================

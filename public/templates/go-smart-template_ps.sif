! /**
!  * This file is part of the Go-Smart Simulation Architecture (GSSA).
!  * Go-Smart is an EU-FP7 project, funded by the European Commission.
!  *
!  * Copyright (C) 2013-  NUMA Engineering Ltd. (see AUTHORS file)
!  *
!  * This program is free software: you can redistribute it and/or modify
!  * it under the terms of the GNU Affero General Public License as
!  * published by the Free Software Foundation, either version 3 of the
!  * License, or (at your option) any later version.
!  *
!  * This program is distributed in the hope that it will be useful,
!  * but WITHOUT ANY WARRANTY; without even the implied warranty of
!  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!  * GNU General Public License for more details.
!  *
!  * You should have received a copy of the GNU Affero General Public License
!  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
!  */
! 
!====================================================================
!  - Complete model with 3 solvers:
!    - Heat Solver
!    - Cells state Solver
!    - VTU output
!  - Transient simulation
!  - 1 materials (Blood and tissue)
!====================================================================

!====================================================================
Header
!====================================================================
!  Computational mesh directory (also used to save the vtu files):
!--------------------------------------------------------------------
  Mesh DB "." "{{ p.MESHLOCATION_MESHER }}"                                   ![H1]!
  Include Path ""
  Results Directory ""
!====================================================================
End
!====================================================================

!====================================================================
Simulation
!====================================================================
  ! Test name:
  !--------------------------------------------------------------------
  Test Name = String "{{ p.RUNNAME }}"                                        ![Si1]!
  !--------------------------------------------------------------------
  ! Simulation length (number of timesteps):
  !--------------------------------------------------------------------
  Timestep intervals = {{ p.SETTING_FINAL_TIMESTEP|typed }}:int                ![Si2]!
  !--------------------------------------------------------------------
  ! Problem characteristics:
  !--------------------------------------------------------------------
  Coordinate System = String "Cartesian 3D"
  Simulation Type = String "Transient"
  !--------------------------------------------------------------------
  ! Timestepping scheme:
  !--------------------------------------------------------------------
  Timestep Sizes = {{ p.SETTING_TIMESTEP_SIZE|typed }}:float
  !--------------------------------------------------------------------
  ! Electric sources:
  !--------------------------------------------------------------------
  ! Sources coordinates (text files):
  !--------------------------------------------------------------------
  Electric Tips Filename Root = String "{{ p.RUNNAME }}-probe-locations"          ![Si5]!
  !--------------------------------------------------------------------
  ! Variable Sources coordinates in time:
  !--------------------------------------------------------------------
  !--------------------------------------------------------------------
  ! Electric power over time (text file):
  !--------------------------------------------------------------------
  Electric Power Filename = String "{{ p.RUNNAME }}-power-over-time"          ![Si5]!
  Multi Electric Tips Location = Logical True
  Electric Tips Location Times Nb = {{ p.PROBELOCATIONS_COUNT|typed }}
  Multi Electric Tips Location Times({{ p.PROBELOCATIONS_COUNT }}) = {{ p.PROBELOCATIONS|typed }}

!====================================================================
End
!====================================================================

!====================================================================
Body 1
!====================================================================
  {{ p.BODIES_REGIONS_ORGANS }}
  Name = "Tissue & Blood"
  Equation = Integer 1
  Body Force = Integer 1
  Initial condition = Integer 1
  Material = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Body 2
!====================================================================
  {{ p.BODIES_REGIONS_TUMOURS }}

  Name = "Tumour"
  Equation = Integer 1
  Initial condition = Integer 1
  Material = Integer 2
  Body Force = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Body 3
!====================================================================
  {{ p.BODIES_REGIONS_TACE }}

  Name = "TACE"
  Equation = Integer 1
  Initial condition = Integer 1
  Material = Integer 3
  Body Force = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Body 4
!====================================================================
  {{ p.BODIES_REGIONS_LESIONS }}

  Name = "Lesion"
  Equation = Integer 1
  Initial condition = Integer 1
  Material = Integer 4
  Body Force = Integer 1
!====================================================================
End
!====================================================================

!====================================================================
Equation 1
!====================================================================
  Name = "NUMA RFA Point Sources"
  Active Solvers(5) = Integer 1 2 3 4 5
!====================================================================
End
!====================================================================

!====================================================================
Solver 1 ! Heat solver (tissue temperatures)
!====================================================================
  Equation = String "heatequation"
  Procedure = File "libnuma-eheatsolver" "HeatSolver"

  Update Exported Variables = Logical True
  Nonlinear Update Exported Variables = Logical True
  Exported Variable 1 = String "Electric Power"
  Variable = String "Temperature"
  Variable DOFs = Integer 1

  Cell Death Modelling = Logical True
  Perfusion Visualization = Logical True

  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStabL"
  Linear System Max Iterations = 350
  Linear System Convergence Tolerance = 1.0e-10
  Linear System Abort Not Converged = True
  !Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
  Steady State Convergence Tolerance = 1.0e-03
  Stabilize = True
  Nonlinear System Convergence Tolerance = 1.0e+2
  Nonlinear System Max Iterations = 500
  Nonlinear System Newton After Iterations = 3
  Nonlinear System Newton After Tolerance = 1.0e-02
  Nonlinear System Relaxation Factor = 0.25
!====================================================================
End
!====================================================================

!====================================================================
Solver 2 ! Cells state
!====================================================================
  Equation = String "cellstate"
  Procedure = File "libnuma-cellstate" "NumaCellStateSolver"

  Variable = String "CellState[Alive :1 Dead:1]"
  Variable DOFs = Integer 2
  Forward Rate = {{ p.CONSTANT_FORWARD_RATE|typed }}:float
  Backward Rate = {{ p.CONSTANT_BACKWARD_RATE|typed }}:float
  Exponential Rate = {{ p.CONSTANT_EXPONENTIAL_RATE|typed }}:float
  Nonlinear System Max Iterations = 500
  Nonlinear System Convergence Tolerance = 1.0e-9
!====================================================================
End
!====================================================================

!====================================================================
Solver 3
!====================================================================
  Equation = String "powergenerator"
  Exec Solver = String "Before timestep"
  Procedure = File "libnuma-powergenerator" "NumaPowerGeneratorSolver"
  Update Exported Variables = Logical True
  Present Phase = {{ p.PHASE|typed }}
  Nonlinear Update Exported Variables = Logical True
  Variable = String "SAR"
  Impedance Voltage = Real 300.0
  Temperature Controlled Electric Power = Logical True
  Proportional Gain For Electric Power Control = {{ p.CONSTANT_PID_CONTROLLER_PROPORTIONAL_GAIN|typed }}:float
  Target Temperature = {{ p.TARGET_TEMPERATURE|typed }}
  Electric Power = {{ p.CONSTANT_INPUT_POWER|typed }}:float
  Linear System Solver = "Iterative"
  Linear System Iterative Method = "BiCGStabL"
  !Linear System Use TrilinosKokkos = Logical True
  !TrilinosKokkos Parameter File = String belos_ifpack.xml
  Linear System Max Iterations = 350
  Linear System Convergence Tolerance = 1.0e-10
  Linear System Abort Not Converged = True
  !Linear System Preconditioning = "ILU0"
  Linear System Residual Output = 1
  Steady State Convergence Tolerance = 1.0e-03
End

!====================================================================
Solver 4 ! VTU Output writer
!====================================================================
  Equation = String "vtuoutput"
  Exec Solver = String "After timestep"
  Procedure = File "ResultOutputSolve" "ResultOutputSolver"
  Output Format = String "vtu"
  Vtu Format = Logical True
!--------------------------------------------------------------------
!  Frequency of output (in timesteps):
!--------------------------------------------------------------------
   Output Frequency = Integer 1                         ![So1]!
!====================================================================
End
!====================================================================

!====================================================================
Solver 5 ! Progress Solver
!====================================================================
  Equation = String "progress"
  Procedure = File "libnuma-progress" "NumaProgressSolver"
  Percentage Progress = {{ p.PERCENTAGE|typed }}
!====================================================================
End
!====================================================================

!====================================================================
Body Force 1
!====================================================================
  Heat Source = Equals SAR
  Volumetric Heat Source = Logical True
!====================================================================
End
!====================================================================

!====================================================================
Material 1 ! Body
!====================================================================
  Name = "Tissue"

  Body Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
  Heat Conductivity = {{ p.CONSTANT_THERMAL_CONDUCTIVITY_TISSUE|typed }}:float
  Heat Capacity = {{ p.CONSTANT_SPECIFIC_HEAT_CAPACITY_TISSUE|typed }}:float
  Density = {{ p.CONSTANT_DENSITY_TISSUE|typed }}:float
  Perfusion Rate = {{ p.CONSTANT_PERFUSION_RATE_TISSUE|typed }}:float
  Perfusion Density = {{ p.CONSTANT_PERFUSION_DENSITY_TISSUE|typed }}:float
  Perfusion Heat Capacity = {{ p.CONSTANT_PERFUSION_HEAT_CAPACITY_TISSUE|typed }}:float
  Perfusion Reference Temperature = {{ p.CONSTANT_PERFUSION_REFERENCE_TEMPERATURE_TISSUE|typed }}:float
  Vapourization Cut Off = {{ p.CONSTANT_VAPOURIZATION_CUT_OFF_TISSUE|typed }}:float
  !Vapourization Minimum Deposition = {{ p.CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_TISSUE|typed }}:float
  !Vapourization Gradient = {{ p.CONSTANT_VAPOURIZATION_GRADIENT_TISSUE|typed }}:float
  !Coagulation Cut Off = {{ p.CONSTANT_COAGULATION_CUT_OFF_TISSUE|typed }}:float
  !Coagulation Minimum Deposition = {{ p.CONSTANT_COAGULATION_MINIMUM_DEPOSITION_TISSUE|typed }}:float
  !Coagulation Gradient = {{ p.CONSTANT_COAGULATION_GRADIENT_TISSUE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Material 2 ! Tumour
!====================================================================
  Body Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
  Heat Conductivity = {{ p.CONSTANT_THERMAL_CONDUCTIVITY_TUMOUR|typed }}:float
  Heat Capacity = {{ p.CONSTANT_SPECIFIC_HEAT_CAPACITY_TUMOUR|typed }}:float
  Density = {{ p.CONSTANT_DENSITY_TUMOUR|typed }}:float

  Perfusion Rate = {{ p.CONSTANT_PERFUSION_RATE_TUMOUR|typed }}:float
  Perfusion Density = {{ p.CONSTANT_PERFUSION_DENSITY_TUMOUR|typed }}:float
  Perfusion Heat Capacity = {{ p.CONSTANT_PERFUSION_HEAT_CAPACITY_TUMOUR|typed }}:float
  Perfusion Reference Temperature = {{ p.CONSTANT_PERFUSION_REFERENCE_TEMPERATURE_TUMOUR|typed }}:float
    Vapourization Cut Off = {{ p.CONSTANT_VAPOURIZATION_CUT_OFF_TUMOUR|typed }}:float
    !Vapourization Minimum Deposition = {{ p.CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_TUMOUR|typed }}:float
    !Vapourization Gradient = {{ p.CONSTANT_VAPOURIZATION_GRADIENT_TUMOUR|typed }}:float
    !Coagulation Cut Off = {{ p.CONSTANT_COAGULATION_CUT_OFF_TUMOUR|typed }}:float
    !Coagulation Minimum Deposition = {{ p.CONSTANT_COAGULATION_MINIMUM_DEPOSITION_TUMOUR|typed }}:float
    !Coagulation Gradient = {{ p.CONSTANT_COAGULATION_GRADIENT_TUMOUR|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Material 3 ! TACE
!====================================================================
  Body Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
  Heat Conductivity = {{ p.CONSTANT_THERMAL_CONDUCTIVITY_TACE|typed }}:float
  Heat Capacity = {{ p.CONSTANT_SPECIFIC_HEAT_CAPACITY_TACE|typed }}:float
  Density = {{ p.CONSTANT_DENSITY_TACE|typed }}:float

  Perfusion Rate = {{ p.CONSTANT_PERFUSION_RATE_TACE|typed }}:float
  Perfusion Density = {{ p.CONSTANT_PERFUSION_DENSITY_TACE|typed }}:float
  Perfusion Heat Capacity = {{ p.CONSTANT_PERFUSION_HEAT_CAPACITY_TACE|typed }}:float
  Perfusion Reference Temperature = {{ p.CONSTANT_PERFUSION_REFERENCE_TEMPERATURE_TACE|typed }}:float
    Vapourization Cut Off = {{ p.CONSTANT_VAPOURIZATION_CUT_OFF_TACE|typed }}:float
    !Vapourization Minimum Deposition = {{ p.CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_TACE|typed }}:float
    !Vapourization Gradient = {{ p.CONSTANT_VAPOURIZATION_GRADIENT_TACE|typed }}:float
    !Coagulation Cut Off = {{ p.CONSTANT_COAGULATION_CUT_OFF_TACE|typed }}:float
    !Coagulation Minimum Deposition = {{ p.CONSTANT_COAGULATION_MINIMUM_DEPOSITION_TACE|typed }}:float
    !Coagulation Gradient = {{ p.CONSTANT_COAGULATION_GRADIENT_TACE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Material 4 ! Lesion
!====================================================================
  Body Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
  Heat Conductivity = {{ p.CONSTANT_THERMAL_CONDUCTIVITY_LESION|typed }}:float
  Heat Capacity = {{ p.CONSTANT_SPECIFIC_HEAT_CAPACITY_LESION|typed }}:float
  Density = {{ p.CONSTANT_DENSITY_LESION|typed }}:float

  Perfusion Rate = {{ p.CONSTANT_PERFUSION_RATE_LESION|typed }}:float
  Perfusion Density = {{ p.CONSTANT_PERFUSION_DENSITY_LESION|typed }}:float
  Perfusion Heat Capacity = {{ p.CONSTANT_PERFUSION_HEAT_CAPACITY_LESION|typed }}:float
  Perfusion Reference Temperature = {{ p.CONSTANT_PERFUSION_REFERENCE_TEMPERATURE_LESION|typed }}:float
    Vapourization Cut Off = {{ p.CONSTANT_VAPOURIZATION_CUT_OFF_LESION|typed }}:float
    !Vapourization Minimum Deposition = {{ p.CONSTANT_VAPOURIZATION_MINIMUM_DEPOSITION_LESION|typed }}:float
    !Vapourization Gradient = {{ p.CONSTANT_VAPOURIZATION_GRADIENT_LESION|typed }}:float
    !Coagulation Cut Off = {{ p.CONSTANT_COAGULATION_CUT_OFF_LESION|typed }}:float
    !Coagulation Minimum Deposition = {{ p.CONSTANT_COAGULATION_MINIMUM_DEPOSITION_LESION|typed }}:float
    !Coagulation Gradient = {{ p.CONSTANT_COAGULATION_GRADIENT_LESION|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 1 !Organ wall + sphere
!====================================================================
  {{ p.BOUNDARIES_REGIONS_BOUNDARY }}
  Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 2 ! Output vessel (Hepatic vein)
!====================================================================

  !--------------------------------------------------------------------
  ! Boundary index(es):
  !--------------------------------------------------------------------
  {{ p.BOUNDARIES_REGIONS_VEINS }}
  !--------------------------------------------------------------------
  ! Convective BC on temperature:
  !--------------------------------------------------------------------
  Heat Flux BC = Logical True
  !--------------------------------------------------------------------
  ! Convective transfer coefficient (kg.s^-3.K^-1):
  !--------------------------------------------------------------------
  Heat Transfer Coefficient = {{ p.CONSTANT_VENOUS_HEAT_TRANSFER_COEFFICIENT|typed }}:float
  !--------------------------------------------------------------------
  ! External temperature (K):
  !--------------------------------------------------------------------
  External Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 3 ! Input vessel (Portal vein + HA)
!====================================================================

  !--------------------------------------------------------------------
  ! Boundary index(es):
  !--------------------------------------------------------------------
  {{ p.BOUNDARIES_REGIONS_ARTERIES }}
  !--------------------------------------------------------------------
  ! Dirichlet BC on blood and tissue temperatures (K):
  !--------------------------------------------------------------------
  Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 4 !Bronchi
!====================================================================
  {{ p.BOUNDARIES_REGIONS_BRONCHI }}
  Heat Flux BC = Logical True
  Flow Pressure = Real -0.00000000
  Heat Transfer Coefficient = {{ p.CONSTANT_BRONCHI_HEAT_TRANSFER_COEFFICIENT|typed }}:float
  External Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Boundary Condition 3 ! Input vessel (Portal vein + HA)
!====================================================================

  !--------------------------------------------------------------------
  ! Boundary index(es):
  !--------------------------------------------------------------------
  {{ p.BOUNDARIES_REGIONS_VESSELS }}
  !--------------------------------------------------------------------
  Heat Flux BC = Logical True
  !--------------------------------------------------------------------
  ! Convective transfer coefficient (kg.s^-3.K^-1):
  !--------------------------------------------------------------------
  Heat Transfer Coefficient = {{ p.CONSTANT_VENOUS_HEAT_TRANSFER_COEFFICIENT|typed }}:float
  !--------------------------------------------------------------------
  ! External temperature (K):
  !--------------------------------------------------------------------
  External Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float
!====================================================================
End
!====================================================================

!====================================================================
Initial Condition 1
!====================================================================

  Temperature = {{ p.CONSTANT_BODY_TEMPERATURE|typed }}:float

  CellState(2) = Real {{ p.CONSTANT_INITIAL_CELLS_ALIVE }}:float {{ p.CONSTANT_INITIAL_CELLS_DEAD }}:float
!====================================================================
End
!====================================================================

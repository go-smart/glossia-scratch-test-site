! /**
!  * This file is part of the Go-Smart Simulation Architecture (GSSA).
!  * Go-Smart is an EU-FP7 project, funded by the European Commission.
!  *
!  * Copyright (C) 2013-  NUMA Engineering Ltd. (see AUTHORS file)
!  *
!  * This program is free software: you can redistribute it and/or modify
!  * it under the terms of the GNU Affero General Public License as
!  * published by the Free Software Foundation, either version 3 of the
!  * License, or (at your option) any later version.
!  *
!  * This program is distributed in the hope that it will be useful,
!  * but WITHOUT ANY WARRANTY; without even the implied warranty of
!  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!  * GNU General Public License for more details.
!  *
!  * You should have received a copy of the GNU Affero General Public License
!  * along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
!  */
!

Header
    Mesh DB "." "{{ p.MESHLOCATION_MESHER }}"           ![H1]! 
    Include Path ""
    Results Directory ""
End

{% set SEQUENCE_LENGTH = p.CONSTANT_IRE_NEEDLEPAIR_VOLTAGE.value|length %}
!{{ p.CONSTANT_IRE_NEEDLEPAIR_VOLTAGE }}:array(tuple(int,int,float))
{% set SEQUENCE_ANODES, SEQUENCE_CATHODES, SEQUENCE_POTENTIAL = zip(*p.CONSTANT_IRE_NEEDLEPAIR_VOLTAGE.value) %}
{% for i in range(SEQUENCE_LENGTH) %}
!Separation {{ SEQUENCE_ANODES[i] }} -> {{ SEQUENCE_CATHODES[i] }}: {{ (needle_distance(SEQUENCE_ANODES[i], SEQUENCE_CATHODES[i], 10) * 100) }}
{% endfor %}

Simulation
    Test Name = String "{{ p.RUNNAME }}"          ![Si1]!
    Coordinate System = String "Cartesian 3D"
    Simulation Type = String "Transient"
    Timestep Intervals = Integer {{ SEQUENCE_LENGTH }}
    !Steady State Max Iterations = {{ p.CONSTANT_IRE_NONLINEAR_ITERATIONS|typed }}:int
    Steady State Max Iterations = Integer 2000
    Steady State Min Iterations = {{ p.CONSTANT_IRE_NONLINEAR_ITERATIONS|typed }}:int
    Timestep Sizes = Real 1
    Anode({{ SEQUENCE_LENGTH }} ) = {{ SEQUENCE_ANODES|totyped('array(int)') }}
    Cathode({{ SEQUENCE_LENGTH }} ) = {{ SEQUENCE_CATHODES|totyped('array(int)') }}
!Using gradient? {{ p.CONSTANT_IRE_USING_GRADIENT }}:boolean
{% if (p.CONSTANT_IRE_USING_GRADIENT.value) %}
    Potential Consecutive Values(2, {{ SEQUENCE_LENGTH }} ) = Real {% for i in range(SEQUENCE_LENGTH) %}{{
        (SEQUENCE_POTENTIAL[i] * needle_distance(SEQUENCE_ANODES[i], SEQUENCE_CATHODES[i], p.CONSTANT_IRE_NEEDLE_SEPARATION_REFERENCE_OFFSET_FROM_TIP) * 100)|discretize(20)
    }} {% endfor %}
{% else %}
    Potential Consecutive Values(2, {{ SEQUENCE_LENGTH }} ) = {{ SEQUENCE_POTENTIAL|totyped('array(float)') }}
{% endif %}                                              0    0    0    0    0    0    0    0    0
End

{% for needle, n in needles.items() %}
!{{ c.BODY }}
Body {{ needle }}
  {{ n.BODIES_REGIONS_NEEDLE }}
    Equation = Integer 1
    Material = Integer 2
End

Boundary Condition {{ c.BOUNDARY }}
    {{ n.BOUNDARIES_REGIONS_NEEDLE }}
    Body Id = Integer {{ needle }}
    Potential = Variable Time
        Real Procedure "libnuma-ire" "AlternatingBoundaryCondition"
    Alternating Boundary Condition = Logical True
    Survival = Real 0.0 ! Make sure needle boundaries do not appear as alive in lesion
End

Boundary Condition {{ c.BOUNDARY }}
    {{ n.BOUNDARIES_REGIONS_NEEDLE_INACTIVE }}
    Current Density = Real 0.0
    Current Density BC = Logical True
End

{% endfor %}

!Tumour
{% if p.BODIES_REGIONS_TUMOURS %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_TUMOURS }}
    Equation = Integer 1
    Initial Condition = Integer 2
    Material = Integer 3
End
{% endif %}

!TACE
{% if p.BODIES_REGIONS_TACE %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_TACE }}
    Equation = Integer 1
    Initial Condition = Integer 2
    Material = Integer 6
End
{% endif %}

!Lesion
{% if p.BODIES_REGIONS_LESIONS %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_LESIONS }}
    Equation = Integer 1
    Initial Condition = Integer 1
    Material = Integer 7
End
{% endif %}

!Vessel 1
{% if p.BODIES_REGIONS_VESSELS %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_VESSELS }}
    Equation = Integer 1
    Initial Condition = Integer 2
    Material = Integer 5
End
{% endif %}

!Organ
{% if p.BODIES_REGIONS_ORGANS %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_ORGANS }}
    Equation = Integer 1
    Initial Condition = Integer 2
    Material = Integer 1
End
{% endif %}

!Background
{% if p.BODIES_REGIONS_BACKGROUND %}
Body {{ c.BODY }}
  {{ p.BODIES_REGIONS_BACKGROUND }}
    Equation = Integer 1
    Initial Condition = Integer 2
    Material = Integer 4
End
{% endif %}

Equation 1
    Active Solvers(5) = 1 2 3 4 5
End

Solver 1
    Equation = String "Alternating BC Solver"
    Procedure = File "libnuma-ire" "AlternatingBCSolver"
End

Solver 2
    Equation = String "Stat Current Solver"
    Variable = String "Potential"
    Variable DOFs = Integer 1
    Procedure = File "StatCurrentSolve" "StatCurrentSolver"
    Calculate Joule Heating = Logical True
    Steady State Relaxation Factor = Real 0.4
    Steady State Convergence Tolerance = Real 1e-2
Nonlinear system max iterations = 1
Nonlinear system convergence tolerance = 1.0e-5
Nonlinear system newton after iterations = 10
Nonlinear system newton after tolerance = 1.0e-2
Nonlinear System Relaxation Factor = 0.5
    Linear System Solver = "Iterative"
    Linear System Convergence Tolerance = Real 1e-06
    Linear System Abort Not Converged = Logical False
    Linear System Preconditioning = ILU0
    Linear System Iterative Method = "BiCGStab"
    Linear System Max Iterations = Integer 2000
End

Solver 3
    Equation = String "Max e"
    Variable = String "max_e"
    Variable DOFs = Integer 1
    Procedure = File "libnuma-ire" "MaxESolver"
    Pulse Number = Integer 70
    Exported Variable 1 = String "Survival"
    Exported Variable 1 DOFs = Integer 1
    Update Exported Variables = Logical True
    Nonlinear Update Exported Variables = Logical True
End

Solver 4
    Equation = String "Results"
    Procedure = File "ResultOutputSolve" "ResultOutputSolver"
    Save Geometry Ids = Logical True
    Exec Solver = String "After timestep"
    !Output File Name = String "{{ p.RUNNAME }}"          ![Si1]!
    Vtu Format = Logical True
End
!
!Solver 5
!    Equation = String "Output Coverage Curve"
!    Procedure = File "libnuma-ire" "CoverageCurveOutputSolver"
!    Exec Solver = "After Timestep"
!    Divisions = Integer 200
!    Minimum Coverage = Real 5000
!    Maximum Coverage = Real 1e5
!End

Solver 5 ! Progress Solver
  Equation = String "progress"
  Procedure = File "libnuma-progress" "NumaProgressSolver"
  Percentage Progress = {{ p.PERCENTAGE|typed }}
End

Material 1
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_TISSUE|typed }}:float
    Electric Conductivity = Variable Max_E
      Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TISSUE }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_TISSUE }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TISSUE }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_TISSUE }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TISSUE }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TISSUE }}:float
      End
End

Material 2
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_NEEDLE|typed }}:float
    Electric Conductivity = {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_NEEDLE|typed }}:float
End

Material 3
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_TUMOUR|typed }}:float
    Tumour = Logical True
    Electric Conductivity = Variable Max_E
      Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TUMOUR }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_TUMOUR }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TUMOUR }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_TUMOUR }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TUMOUR }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TUMOUR }}:float
      End
End

Material 4
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_BACKGROUND|typed }}:float
   Electric Conductivity = Variable Max_E
     Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_BACKGROUND }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_BACKGROUND }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_BACKGROUND }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_BACKGROUND }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_BACKGROUND }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_BACKGROUND }}:float
    End
End

Material 5
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_VESSELS|typed }}:float
   Electric Conductivity = Variable Max_E
     Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_VESSELS }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_VESSELS }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_VESSELS }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_VESSELS }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_VESSELS }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_VESSELS }}:float
    End
End

Material 6
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_TACE|typed }}:float
   Electric Conductivity = Variable Max_E
     Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TACE }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_TACE }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_TACE }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_TACE }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TACE }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_TACE }}:float
    End
End

Material 7
    Relative Permittivity = {{ p.CONSTANT_IRE_RELATIVE_PERMITTIVITY_LESION|typed }}:float
   Electric Conductivity = Variable Max_E
     Real
       0        {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_LESION }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_LOWER_LESION }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_LOWER_LESION }}:float
       {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_THRESHOLD_UPPER_LESION }}:float  {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_LESION }}:float
       1e20     {{ p.CONSTANT_IRE_ELECTRIC_CONDUCTIVITY_UPPER_LESION }}:float
    End
End

Boundary Condition {{ c.BOUNDARY }}
    {{ p.BOUNDARIES_REGIONS_NO_FLUX }}
    Current Density = Real 0.0
    Current Density BC = Logical True
End

Initial Condition 1
    Survival = Real ${{ p.SETTING_LESION_THRESHOLD_UPPER }} - 1e-5$
End

Initial Condition 2
    Survival = Real 1.0
End
